//////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) GBS 2015 All Right Reserved, http://gbs-jsc.com.                   //
// This source is subject to the GBS Permissive License. Please see the License.txt //
// file for more information.                                                       //
//                                                                                  //
// file: GXml.cpp                                                                   //
//////////////////////////////////////////////////////////////////////////////////////

#include "GXml.hpp"
#include "GDebug.hpp"

//namespace GBS {
//namespace STM {
//namespace Framework {
//////////////////////////////////////////////////////////////////////////////////////

GXml::GXml()
{

}

//////////////////////////////////////////////////////////////////////////////////////
GXml::~GXml()
{
}

//////////////////////////////////////////////////////////////////////////////////////
bool GXml::loadFile(const std::string filename)
{
   return m_xmlDocument.LoadFile(filename);
}

//////////////////////////////////////////////////////////////////////////////////////
bool GXml::saveFile(const std::string filename, GXmlElement* pRootElement)
{
   if( pRootElement != NULL )
   {
      TiXmlDeclaration* titleXml = new TiXmlDeclaration( "1.0", "UTF-8", "" );
      m_xmlDocument.LinkEndChild(titleXml);
      m_xmlDocument.LinkEndChild((TiXmlElement*)pRootElement);
      return m_xmlDocument.SaveFile(filename);
   }

   return false;
}

//////////////////////////////////////////////////////////////////////////////////////
GXmlElement* GXml::getRoot()
{
   return (GXmlElement*)m_xmlDocument.RootElement();
}

//////////////////////////////////////////////////////////////////////////////////////
//GXmlElement
//////////////////////////////////////////////////////////////////////////////////////
bool GXmlElement::removeNode(GXmlElement* pChildNode)
{
   return RemoveChild( (TiXmlNode*)pChildNode );
}

//////////////////////////////////////////////////////////////////////////////////////
GXmlElement* GXmlElement::addNode(GXmlElement* pChildNode)
{
   return (GXmlElement*)LinkEndChild((TiXmlNode*)pChildNode);
}

//////////////////////////////////////////////////////////////////////////////////////
GXmlElement* GXmlElement::getFirstNode()
{
   return (GXmlElement*)FirstChild();
}

//////////////////////////////////////////////////////////////////////////////////////
GXmlElement* GXmlElement::getFirstNode(const char* name)
{
   return (GXmlElement*)FirstChild(name);
}

//////////////////////////////////////////////////////////////////////////////////////
GXmlElement* GXmlElement::getLastNode()
{
   return (GXmlElement*)LastChild();
}

//////////////////////////////////////////////////////////////////////////////////////
GXmlElement* GXmlElement::getLastNode(const char* name)
{
   return (GXmlElement*)LastChild(name);
}

//////////////////////////////////////////////////////////////////////////////////////
GXmlElement* GXmlElement::getNextNode()
{
   return (GXmlElement*)NextSibling();
}

//////////////////////////////////////////////////////////////////////////////////////
GXmlElement* GXmlElement::getNextNode(const char* name)
{
   return (GXmlElement*)NextSibling(name);
}

//////////////////////////////////////////////////////////////////////////////////////
GXmlElement* GXmlElement::getPrevNode()
{
   return (GXmlElement*)PreviousSibling();
}

//////////////////////////////////////////////////////////////////////////////////////
GXmlElement* GXmlElement::getPrevNode(const char* name)
{
   return (GXmlElement*)PreviousSibling(name);
}

//////////////////////////////////////////////////////////////////////////////////////
const char* GXmlElement::addAttribute(const char* name)
{
   return Attribute(name);
}

//////////////////////////////////////////////////////////////////////////////////////
const char* GXmlElement::addAttribute(const char* name, int* pValue)
{
   return Attribute(name, pValue);
}
//////////////////////////////////////////////////////////////////////////////////////
const char* GXmlElement::addAttribute(const char* name, double* pValue)
{
   return Attribute(name, pValue);
}
//////////////////////////////////////////////////////////////////////////////////////
int GXmlElement::getIntAttribute(const char* name, int* pValue)
{
   return QueryIntAttribute(name, pValue);
}
//////////////////////////////////////////////////////////////////////////////////////
int GXmlElement::getUIntAttribute(const char* name, unsigned int* pValue)
{
   return QueryUnsignedAttribute(name, pValue);
}
//////////////////////////////////////////////////////////////////////////////////////
int GXmlElement::getBoolAttribute(const char* name, bool* pValue)
{
   return QueryBoolAttribute(name, pValue);
}
//////////////////////////////////////////////////////////////////////////////////////
int GXmlElement::getDoubleAttribute(const char* name, double* pValue)
{
   return QueryDoubleAttribute(name, pValue);
}
//////////////////////////////////////////////////////////////////////////////////////
int GXmlElement::getFloatAttribute(const char* name, float* pValue)
{
   return QueryFloatAttribute(name, pValue);
}
//////////////////////////////////////////////////////////////////////////////////////
int GXmlElement::getStringAttribute(const char* name, std::string* pValue)
{
   return QueryStringAttribute(name, pValue);
}
//////////////////////////////////////////////////////////////////////////////////////
void GXmlElement::setAttribute(const char* name, int value)
{
   return SetAttribute(name, value);
}
//////////////////////////////////////////////////////////////////////////////////////
void GXmlElement::setAttribute(const char* name, unsigned int value)
{
   return SetAttribute(name, value);
}
//////////////////////////////////////////////////////////////////////////////////////
void GXmlElement::setAttribute(const char* name, bool value)
{
   return SetAttribute(name, value);
}
//////////////////////////////////////////////////////////////////////////////////////
void GXmlElement::setAttribute(const char* name, double value)
{
   return SetAttribute(name, value);
}
//////////////////////////////////////////////////////////////////////////////////////
void GXmlElement::setAttribute(const char* name, char* value)
{
   return SetAttribute(name, value);
}
//////////////////////////////////////////////////////////////////////////////////////
void GXmlElement::setAttribute(const char* name, std::string& value)
{
   return SetAttribute(name, value);
}
//////////////////////////////////////////////////////////////////////////////////////
//GXmlElement
//////////////////////////////////////////////////////////////////////////////////////
//} //Framework
//} //STM
//} //GBS
