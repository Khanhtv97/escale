//////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) GBS 2014 All Right Reserved, http://gbs-jsc.com.                   //
// This source is subject to the GBS Permissive License. Please see the License.txt //
// file for more information.                                                       //
//                                                                                  //
// file: LaserSensor.cpp                                                              //
//////////////////////////////////////////////////////////////////////////////////////

#include "LaserSensor.hpp"
#include "GStringUtils.hpp"
#include "SaveDataToFlash.hpp"

//namespace GBS {
//namespace STM {
//namespace Application {
//namespace Business {
//namespace EScaleManager {
//////////////////////////////////////////////////////////////////////////////////////
LaserSensor::LaserSensor() : SerialPort(SPN_NONE)
{
}

//////////////////////////////////////////////////////////////////////////////////////
LaserSensor::LaserSensor(SerialPortName portName) : SerialPort(portName)
{
}

//////////////////////////////////////////////////////////////////////////////////////
LaserSensor::LaserSensor(SerialPortName portName, U8 id) : SerialPort(portName)
{
   m_id = id;
}

//////////////////////////////////////////////////////////////////////////////////////
LaserSensor::~LaserSensor()
{
}

//////////////////////////////////////////////////////////////////////////////////////
bool LaserSensor::init()
{
   //Do nothing, will be implemented in derived class
   return false;
}

//////////////////////////////////////////////////////////////////////////////////////
bool LaserSensor::deinit()
{
   //Do nothing, will be implemented in derived class
   return false;
}

//////////////////////////////////////////////////////////////////////////////////////
bool LaserSensor::isReady()
{
   //Do nothing, will be implemented in derived class
   return false;
}

//////////////////////////////////////////////////////////////////////////////////////
void LaserSensor::setId(U8 id)
{
   m_id = id;
}

//////////////////////////////////////////////////////////////////////////////////////
U8 LaserSensor::getId()
{
   return m_id;
}

//////////////////////////////////////////////////////////////////////////////////////
//} //EScaleManager
//} //Business
//} //Application
//} //STM
//} //GBS
